apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion Versions.compileSdk
    buildToolsVersion Versions.buildTools

    defaultConfig {
        applicationId "com.apisov.percusoid"
        minSdkVersion Versions.minSdk
        targetSdkVersion Versions.compileSdk
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }

        sourceSets {
            androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
        }
        
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    dataBinding {
        enabled = true
    }

    flavorDimensions "default"

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
            dimension "default"
        }
        prod {
            dimension "default"
        }
    }

    // Remove mockRelease as it's not needed.
    android.variantFilter { variant ->
        if (variant.buildType.name == 'release'
                && variant.flavors[0].name == 'mock') {
            variant.ignore = true
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests.all {
        testLogging {
            events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    android {
        lintOptions {
            abortOnError false
        }
    }
}

dependencies {
    /*ANDROID*/
    implementation Deps.constraintLayout
    implementation Deps.appcompat
    implementation Deps.design
    implementation Deps.room
    implementation Deps.roomRxJava
    implementation Deps.archLifecycle

    implementation 'com.shawnlin:number-picker:2.4.6'

    kapt Deps.roomCompiler
    kapt Deps.archLifecycleCompiler

    /*KOTLIN*/
    implementation Deps.anko
    implementation Deps.kotlinStdlib
    implementation Deps.koin

    // RX
    implementation Deps.rxJava
    implementation(Deps.rxKotlin) {
        exclude module: 'rxjava'
    }
    implementation(Deps.rxAndroid) {
        exclude module: 'rxjava'
    }
    /*OTHER*/
    implementation 'com.illposed.osc:javaosc-core:0.4'
    implementation 'com.jakewharton.timber:timber:4.6.1'

    /* TESTING */
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation "android.arch.core:core-testing:$Versions.archLifecycle"
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xmaxerrs" << "500" // or whatever number you want
    }
}
